# To setup quay locally
#
# ansible-playbook --private-key=~/.minishift/machines/minishift/id_rsa --u docker -i `minishift ip`, playbooks/quay-local.yaml
#
- hosts: localhost
  vars:
    quay_host: thomasmckay-desktop.usersys.redhat.com
    quay_ip: 192.168.1.2
    quay_image: quay.io/redhat/quay:v3.0.2
    clair_image: quay.io/redhat/clair-jwt:v3.0.2
    builder_image: quay.io/redhat/quay-builder:v3.0.2
    roles_dir: ../roles
    volumes_dir: /home/thomasmckay/quay-volumes
    downloads_dir: /home/thomasmckay/Downloads

  tasks:
    - name: Stop docker processes
      tags: [teardown, start-setup]
      ignore_errors: true
      shell:
        cmd: |
          docker kill quay-postgresql quay-redis quay-config quay clair-postgresql clair

    - name: Remove prior data and volume folders
      tags: [teardown, start-setup]
      command: "sudo rm -Rf {{ volumes_dir }}/{{ item }}"
      args:
        removes: "{{ volumes_dir }}/{{ item }}"
      with_items:
        - quay-redis
        - quay-postgresql
        - quay-storage
        - quay-config
        - clair-postgresql
        - clair-config
        - quay-builder
        - certs

    - name: Create volume folders
      tags: [start-setup]
      file:
        path: "{{ volumes_dir }}/{{ item }}"
        state: directory
      with_items:
        - quay-redis
        - quay-postgresql
        - quay-storage
        - quay-config
        - clair-postgresql
        - clair-config
        - quay-builder
        - certs

    - name: Remove old Downloads
      tags: [start-setup]
      file:
        path: "{{ downloads_dir }}/{{ item }}"
        state: absent
      with_items:
        - quay-config.tar.gz
        - security_scanner.pem

    - name: Create TLS cert and key
      tags: [start-setup]
      shell:
        cmd: |
          # Root CA
          openssl genrsa -out {{ volumes_dir }}/certs/rootCA.key 4096
          openssl req -new -x509 -key {{ volumes_dir }}/certs/rootCA.key -out {{ volumes_dir }}/certs/rootCA.crt \
              -days 365 -extensions v3_ca -subj "/C=US/L=Syracuse/CN=Quay"

          # Quay server
          openssl genrsa -out {{ volumes_dir }}/certs/quay.key 4096
          openssl req -new -key {{ volumes_dir }}/certs/quay.key -out {{ volumes_dir }}/certs/quay.csr \
              -subj "/C=US/ST=New York/L=Cazenovia/O=Red Hat/OU=Quay/emailAddress=thomasmckay@redhat.com/CN={{ quay_host }}"
          openssl x509 -req -days 365 -in {{ volumes_dir }}/certs/quay.csr -out {{ volumes_dir }}/certs/quay.crt \
              -CA {{ volumes_dir }}/certs/rootCA.crt -CAkey {{ volumes_dir }}/certs/rootCA.key \
              -CAcreateserial -extensions v3_req -extfile /etc/pki/tls/openssl.cnf

          # Clair server
          openssl genrsa -out {{ volumes_dir }}/certs/clair.key 4096
          openssl req -new -key {{ volumes_dir }}/certs/clair.key -out {{ volumes_dir }}/certs/clair.csr \
              -subj "/C=US/ST=New York/L=Cazenovia/O=Red Hat/OU=Quay/emailAddress=thomasmckay@redhat.com/CN={{ quay_host }}"
          openssl x509 -req -days 365 -in {{ volumes_dir }}/certs/clair.csr -out {{ volumes_dir }}/certs/clair.crt \
              -CA {{ volumes_dir }}/certs/rootCA.crt -CAkey {{ volumes_dir }}/certs/rootCA.key \
              -CAcreateserial -extensions v3_req -extfile /etc/pki/tls/openssl.cnf

    - name: Install rootCA and restart docker.service
      tags: [start-setup]
      shell:
        cmd: |
          sudo cp {{ volumes_dir }}/certs/rootCA.crt /etc/pki/ca-trust/source/anchors
          sudo update-ca-trust extract
          sudo systemctl restart docker.service

    - name: Quay Postgresql container
      tags: [start-setup]
      docker_container:
        name: quay-postgresql
        image: registry.redhat.io/rhscl/postgresql-96-rhel7:latest
        volumes:
          - "{{ volumes_dir }}/quay-postgresql:/var/lib/postgresql/data/pgdata:Z"
        env:
          POSTGRESQL_USER: quay
          POSTGRESQL_PASSWORD: quay
          POSTGRESQL_DATABASE: quay
        ports:
          - "5432:5432"
        keep_volumes: true
        auto_remove: true
        state: started
        restart: true
        etc_hosts:
          # This does not expand the hostname that lands in /etc/hosts
          # "{{ quay_host }}": "{{ quay_ip }}"
          thomasmckay-desktop.usersys.redhat.com: 192.168.1.2

    - name: Postgresql add pg_trgm extension
      tags: [start-setup]
      shell:
        cmd: |
          docker exec quay-postgresql bash -l -c 'echo "CREATE EXTENSION pg_trgm" | psql quay'
      register: result
      until: result is succeeded
      retries: 5
      delay: 10

    - name: Quay Redis container
      tags: [start-setup]
      docker_container:
        name: quay-redis
        image: registry.redhat.io/rhscl/redis-32-rhel7:latest
        volumes:
          - "{{ volumes_dir }}/quay-redis:/var/lib/redis:Z"
        ports:
          - "6379:6379"
        etc_hosts:
          thomasmckay-desktop.usersys.redhat.com: 192.168.1.2
        keep_volumes: true
        auto_remove: true
        state: started

    - name: Pull latest image
      tags: [start-setup]
      shell:
        cmd: |
          docker pull {{ quay_image }}

    - name: Quay Config container
      tags: [start-setup]
      docker_container:
        name: quay-config
        image: "{{ quay_image }}"
        volumes:
          - "{{ volumes_dir }}/quay-config:/conf/stack"
          - "{{ volumes_dir }}/quay-storage:/datastorage"
        env:
          QUAYENTRY: config
          CONFIG_APP_PASSWORD: password
        ports:
          - "9080:8080"
          - "9443:8443"
        etc_hosts:
          thomasmckay-desktop.usersys.redhat.com: 192.168.1.2
        keep_volumes: true
        auto_remove: true
        state: started
        restart: true
      register: result
      until: result is succeeded
      retries: 5
      delay: 10

    - name: Open browser
      tags: [start-setup]
      command: "xdg-open https://{{ quay_host }}:9443"

    - name: Install config
      tags: [finish-setup]
      shell:
        cmd: |
          mv {{ downloads_dir }}/quay-config.tar.gz {{ volumes_dir }}/quay-config/quay-config.tar.gz
          tar xvf {{ volumes_dir }}/quay-config/quay-config.tar.gz -C {{ volumes_dir }}/quay-config
          mv {{ downloads_dir }}/security_scanner.pem {{ volumes_dir }}/quay-config

    - name: Pull latest image
      tags: [finish-setup]
      shell:
        cmd: |
          docker pull {{ quay_image }}

    - name: Quay Registry container
      tags: [finish-setup]
      docker_container:
        name: quay
        image:  "{{ quay_image }}"
        volumes:
          - "{{ volumes_dir }}/quay-config:/conf/stack"
          - "{{ volumes_dir }}/quay-storage:/datastorage"
        env:
          QUAYENTRY: registry
          DEBUGLOG: "true"
        ports:
          - "80:8080"
          - "443:8443"
        etc_hosts:
          thomasmckay-desktop.usersys.redhat.com: 192.168.1.2
        keep_volumes: true
        auto_remove: true
        state: started
        restart: true
      register: result
      until: result is succeeded
      retries: 5
      delay: 10

    - name: Determine security_scanner key ID
      tags: [finish-setup]
      shell:
        cmd: |
          docker exec quay-postgresql bash -l -c 'echo "select kid,service from servicekey;" | psql quay' | grep security_scanner | awk '{print $1}'
      register: key_id

    - name: Put security_scanner.pem in place
      tags: [finish-setup]
      shell:
        cmd: |
          cp {{ volumes_dir }}/quay-config/security_scanner.pem {{ volumes_dir }}/clair-config/

    - name: Create clair.yaml
      tags: [finish-setup]
      vars:
        quay_endpoint: "{{ quay_host }}"
        clair_endpoint: "{{ quay_host }}"
      shell:
        cmd: |
          cp {{ volumes_dir }}/certs/rootCA.crt {{ volumes_dir }}/clair-certs/rootCA.crt
          cp {{ volumes_dir }}/quay-config/security_scanner.pem {{ volumes_dir }}/clair-config/security_scanner.pem
          cp {{ volumes_dir }}/certs/clair.crt {{ volumes_dir }}/clair-config
          cp {{ volumes_dir }}/certs/clair.key {{ volumes_dir }}/clair-config
          cat <<EOF > {{ volumes_dir }}/clair-config/config.yaml
          clair:
            database:
              type: pgsql
              options:
                source: postgresql://quay:quay@{{ clair_endpoint }}:5432/clair?sslmode=disable
                cachesize: 16384
            api:
              healthport: 6061
              port: 6062
              timeout: 900s
              paginationkey: "XxoPtCUzrUv4JV5dS+yQ+MdW7yLEJnRMwigVY/bpgtQ="
            updater:
              interval: 6h
              enabledupdaters:
              - rhel
              - alpine
              notifier:
                attempts: 3
                renotifyinterval: 1h
                http:
                  endpoint: https://{{ quay_endpoint }}/secscan/notify
                  proxy: http://localhost:6063
          jwtproxy:
            signer_proxy:
              enabled: true
              listen_addr: :6063
              ca_key_file: /certificates/mitm.key
              ca_crt_file: /certificates/mitm.crt
              signer:
                issuer: security_scanner
                expiration_time: 5m
                max_skew: 1m
                nonce_length: 32
                private_key:
                  type: preshared
                  options:
                    key_id: {{ key_id.stdout }}
                    private_key_path: /clair/config/security_scanner.pem
            verifier_proxies:
            - enabled: true
              listen_addr: :6060
              key_file: /clair/config/clair.key
              crt_file: /clair/config/clair.crt
              verifier:
                audience: https://{{ clair_endpoint }}:6060
                upstream: http://localhost:6062
                key_server:
                  type: keyregistry
                  options:
                    registry: https://{{ quay_endpoint }}/keys/
          EOF

    - name: Pull latest image
      tags: [finish-setup]
      shell:
        cmd: |
          docker pull {{ clair_image }}

    - name: Postgresql 'clair' database
      tags: [finish-setup]
      shell:
        cmd: |
          docker exec quay-postgresql bash -l -c 'createdb clair'
      register: result
      ignore_errors: yes


    - name: Clair container
      tags: [finish-setup]
      docker_container:
        name: clair
        image: "{{ clair_image }}"
        volumes:
          - "{{ volumes_dir }}/clair-config:/clair/config:Z"
          - "{{ volumes_dir }}/certs/rootCA.crt:/etc/pki/ca-trust/source/anchors/rootCA.crt"
          # - {{ volumes_dir }}/certs/clair.cert:/etc/pki/ca-trust/source/anchors/clair.crt
          # - {{ volumes_dir }}/certs/rootCA.pem:/etc/pki/ca-trust/source/anchors/ca.crt
          #- {{ volumes_dir }}/clair-config/config.yaml:/config/config.yaml
          #- {{ volumes_dir }}/clair-config:/clair/config:Z
          # - {{ volumes_dir }}/certs/clair.cert:/usr/local/share/ca-certificates/ca.crt
        ports:
          - "6060:6060"
          - "6061:6061"
        etc_hosts:
          thomasmckay-desktop.usersys.redhat.com: 192.168.1.2
        network_mode: host
        keep_volumes: true
        auto_remove: true
        state: started
        restart: true
      register: result
      until: result is succeeded
      retries: 5
      delay: 10

    - name: Open browser
      tags: [finish-setup]
      command: "xdg-open https://{{ quay_host }}"